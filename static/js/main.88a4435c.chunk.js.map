{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/logo.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","errorMsg","catch","console","log","this","htmlFor","React","Component","Register","onNameChange","onSubmitRegister","includes","particlesSetting","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayBox","onPictureSubmit","count","Object","assign","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.88a4435c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>);\r\n    }\r\n    else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/logo.b1b569b6.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './logo.png'\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ma4\">\r\n                <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 150, width: 150 }} >\r\n                    <div className=\"Tilt-inner pa2\">\r\n                        <img src={brain} alt='logo' />\r\n                    </div>\r\n                </Tilt>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3' >\r\n                {'This FaceBot will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input\r\n                        className='f4 pa2 w-70 center'\r\n                        type='tex'\r\n                        placeholder='Paste In An Image link'\r\n                        onChange={onInputChange} />\r\n                    <button\r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onButtonSubmit} >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current entry count is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma2'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='' src={imageUrl} width='600px' height='auto' />\r\n                <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://still-thicket-49468.herokuapp.com/signin',\r\n            {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email: this.state.signInEmail,\r\n                    password: this.state.signInPassword\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        errorMsg: 'Wrong Email or Password!'\r\n                    })\r\n                }\r\n            }).catch(console.log)\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db dib pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                    <legend className=\"f4 fw6 ph0 mh0 ma2\">{this.state.errorMsg}</legend>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        if (this.state.name && this.state.email && this.state.password) {\r\n            if (this.state.email.includes('@')) {\r\n                fetch('https://still-thicket-49468.herokuapp.com/register',\r\n                    {\r\n                        method: 'post',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({\r\n                            name: this.state.name,\r\n                            email: this.state.email,\r\n                            password: this.state.password\r\n                        })\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(user => {\r\n                        if (user.id) {\r\n                            this.props.loadUser(user);\r\n                            this.props.onRouteChange('signin');\r\n                        }\r\n                        else {\r\n                            console.log('Register Error!');\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                this.setState({ errorMsg: 'Invalid Email!' })\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ errorMsg: 'Please Fill Out All Fields!' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    onChange={this.onNameChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\" />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onSubmitRegister}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                    <legend className=\"center f4 fw6 ph0 mh0 ma3\">{this.state.errorMsg}</legend>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Register;","import './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport { Component } from 'react';\n\nconst particlesSetting = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://still-thicket-49468.herokuapp.com/')\n      .then(response => response.json())\n      .then(console.log)\n      .catch(console.log)\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayBox = (box) => {\n    this.setState({ box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onPictureSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    fetch('https://still-thicket-49468.herokuapp.com/imageUrl',\n      {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://still-thicket-49468.herokuapp.com/image',\n            {\n              method: 'put',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log);\n        }\n        this.displayBox(this.calculateFaceLocation(response));\n      })\n      .catch(console.log);\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\" >\n        <Particles className='particles' params={particlesSetting} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        <Logo />\n        {route === 'home' ?\n          <div>\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onPictureSubmit} />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : (route === 'signin' ?\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : < Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}